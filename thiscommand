sudo apt-get install python-dev
$sudo apt-get install python-pip
$sudo pip install pip --upgrade
sudo apt-get install libpcre3 libpcre3-dev #用来编译后面的uwsgi
sudo apt-get install zlib1g-dev

virtualenv paperproject
cd /home/shen/Documents/paperproject
source ./bin/activate
pip install Django==1.8


mysql -h localhost -u root -p 
mysql -u root -p
sudo service mysql restart

delete from notifications_notification

python manage.py migrate
username:shen
password:123456
echo yes | python /home/shen/Documents/paperproject/mynewspaper/manage.py collectstatic 


ECS:ssh root@123.56.31.34
password: shenanpinG2008
管理终端连接密码： 634343
python manage.py runserver 8080 ###启动django自带服务器
sudo /usr/local/coreseek/bin/indexer -c /home/shen/Downloads/coreseek-4.1-beta/testpack/etc/csft_mysql.conf --all  --rotate ###更新搜索栏索引
sudo /usr/local/coreseek/bin/searchd -c /home/shen/Downloads/coreseek-4.1-beta/testpack/etc/csft_mysql.conf  ###启动搜索栏后台服务
cd /home/shen/Downloads/redis-3.0.7/src
./redis-server ###启动redis-server
python manage.py celery worker --loglevel=info  -Q celery  ###启动celery

multi


cd /home/shen/Documents/paperproject/mynewspaper/article #备注：在virtualenv 内安装的需要在virtualenv 内启动celery-server
celery -A tasks worker --loglevel=info


python manage.py makemigrations article
python manage.py sqlmigrate article 0001
python manage.py migrate

python manage.py makemigrations 
python manage.py migrate 
python manage.py migrate --fake

pip install  django-simple-captcha -i http://pypi.douban.com/simple/
pip install django-ckeditor
python manage.py  collectstatic --clear

pip install Pillow
ALTER TABLE article_article CONVERT TO CHARACTER SET utf8 COLLATE utf8_general_ci;
ALTER TABLE article_category CONVERT TO CHARACTER SET utf8 COLLATE utf8_general_ci;
ALTER TABLE article_relation  CONVERT TO CHARACTER SET utf8 COLLATE utf8_general_ci;
ALTER TABLE accounts_myuser  CONVERT TO CHARACTER SET utf8 COLLATE utf8_general_ci;
ALTER TABLE accounts_userprofile   CONVERT TO CHARACTER SET utf8 COLLATE utf8_general_ci;
ALTER TABLE accounts_userconecction   CONVERT TO CHARACTER SET utf8 COLLATE utf8_general_ci;
ALTER TABLE topic_topic CONVERT TO CHARACTER SET utf8 COLLATE utf8_general_ci;
ALTER TABLE topic_group CONVERT TO CHARACTER SET utf8 COLLATE utf8_general_ci;
ALTER TABLE comment_comment CONVERT TO CHARACTER SET utf8 COLLATE utf8_general_ci;
ALTER TABLE notifications_notification  CONVERT TO CHARACTER SET utf8 COLLATE utf8_general_ci;
ALTER TABLE topic_group   CONVERT TO CHARACTER SET utf8 COLLATE utf8_general_ci;
ALTER TABLE topic_topic   CONVERT TO CHARACTER SET utf8 COLLATE utf8_general_ci;

python manage.py startapp notifications

touch README
git init
git add .
git commit -m 'code changed '
git remote add project_local https://github.com/kij8323/mynewspaper_current.git
git push  -u project_local master -f
shenanping2008@Hotmail.com
012ssskkk


git init
git add .
git commit -m 'code changed '
git remote add somefile https://github.com/kij8323/somefile.git
git push -u somefile master
shenanping2008@Hotmail.com
012ssskkk


从远端下载到本地
git clone https://github.com/kij8323/mynewspaper.git

ab -c 10 -n 1000 http://127.0.0.1:8080

压力测试工具： siege
sudo apt-get install siege  
50个用户 重复100次 发送GET参数
siege -c 50 -r 100 http://127.0.0.1:8080/
siege -c 50 -t 1 http://127.0.0.1:8080/
我们直接用50个并发，执行1分钟来试下效果吧


how to Installing Sphinx
sudo apt-get install mysql-client unixodbc libpq5
sudo add-apt-repository ppa:builds/sphinxsearch-rel22
sudo apt-get update
sudo apt-get install sphinxsearch
apt-get remove sphinxsearch
sudo service sphinxsearch start
cd  /etc/sphinxsearch
sudo vi /etc/sphinxsearch/sphinx.conf
cp sphinx.conf.sample sphinx.conf
cp -dpR /var/lib/mysql/mysite /etc/sphinxsearch/mysite ######复制/迁移mysql数据库
mysql datafolder  /var/lib/mysql  ###mysql数据默认路径
/var/lib/mysql/mysite
SELECT * FROM accounts_myuser;
sudo /usr/bin/indexer -c /etc/sphinxsearch/sphinx.conf mysite --rotate #####建立引索
sudo /usr/bin/searchd -c /etc/sphinxsearch/sphinx.conf 

使用sphnix API 之前需要安装到cd /usr/share/sphinxsearch/api/libsphinxclient安装一遍
sudo ./configure
sudo make
sudo make install

lsof -i :port_number
sudo kill 5938  #####杀死进程
ps -e  ####查看进程



SELECT * FROM accounts_myuser   WHERE MATCH('test');
SELECT * FROM accounts_myuser  WHERE MATCH('test') OPTION ranker=id;

sudo apt-get remove sphinxsearch
sudo apt-get autoremove sphinxsearch


  1.下载的软件存放位置
       /var/cache/apt/archives

     2.安装后软件默认位置
     /usr/share

     3.可执行文件位置 
     /usr/bin

     4.配置文件位置
      /etc

     5.lib文件位置
    /usr/lib

安装coreseek前依赖
sudo apt-get install libtool*
sudo apt-get install automake --fix-missing #####sudo apt-get install automake
cp -R /usr/share/sphinxsearch/. /usr/local/coreseek
手机

sudo /usr/local/coreseek/bin/indexer -c /home/shen/Downloads/coreseek-4.1-beta/testpack/etc/csft_mysql.conf --all  --rotate ###建立引索
/usr/local/coreseek/bin/searchd -c /home/shen/Downloads/coreseek-4.1-beta/testpack/etc/csft_mysql.conf  ###启动后台服务（必须开启）
/usr/local/coreseek/bin/search -c /home/shen/Downloads/coreseek-4.1-beta/testpack/etc/csft_mysql.conf   Google服务今年无论如何都会回中国 ###搜索
python /home/shen/Downloads/coreseek-4.1-beta/testpack/api/test.py 手机 ###搜索api

备注：数据库更新后需要重新建立引索，在python中用os.system()无效，需要开一个终端，重新建立引索
echo "123456" | sudo -S /usr/local/coreseek/bin/indexer -c /home/shen/Downloads/coreseek-4.1-beta/testpack/etc/csft_mysql.conf --all  --rotate  #自动输入密码


 sql后缀文件导入msql数据库
mysql -u root -p 012ssskkk < documents.sql

redis:
先安装redis，从redis官方下载 or sudo apt-get install redis-server
pip install django-redis
sudo pip install redis

 import redis
redis的默认端口6379
 r = redis.StrictRedis(host='localhost', port=6379, db=0)
r.set('foo', 'bar')

数据库优化：
建立索引
MyUser: username id 
Comment：parent user id article topic readers
Notification：recipient verb timestamp id sender_object 
Collection：user id article
Article: writer timestamp id title cover readers
Topic: writer timestamp id group cover readers
CollectionTopic:user topic id
category: id title
Relation:category  article id
Group: id  founder


继续要大量读写 也需大量查询
readers

redis存储信息：
article 收藏的次数 readers
topic 回复次数 readers
comment 


pip install  celery[redis] 
pip install Celery
pip install django-celery
pip install celery-with-redis
python manage.py celery worker --loglevel=info
# python manage.py celery worker --loglevel=info
app = Celery('celeryconf', broker='redis://localhost:6379/0')

备注：
注册的函数必须放在名为tasks.py的文件中
I was able to get this working by refactoring so that the tasks were not class methods. I placed them in our tasks.py file and everything works fine. I haven't had time to research why this is the case, which I plan to do, but until then if anyone is having the same problem you'll have a quick fix available.



将readers+1的操作放到celery中，加快网页的加载时间
给readers加索引，
继续把网站上与数字有关的，全部做一层redis


管理终端连接密码： 634343


警告! 管理终端连接密码只出现一次，您以后每次管理终端登录时都需要输入该密码，请做好记录存档工作。
请注意：如果您未安装Flash插件或版本过低，“复制密码”功能将无法正常使用，请手动复制。


缓存的readers 增加1
文章回复数量
建立索引常用的规则如下： 

1、表的主键、外键必须有索引； 
2、数据量超过300的表应该有索引；
3、经常与其他表进行连接的表，在连接字段上应该建立索引； 
4、经常出现在Where子句中的字段，特别是大表的字段，应该建立索引；
5、索引应该建在选择性高的字段上；
6、索引应该建在小字段上，对于大的文本字段甚至超长字段，不要建索引；
7、复合索引的建立需要进行仔细分析；尽量考虑用单字段索引代替： A、正确选择复合索引中的主列字段，一般是选择性较好的字段； B、复合索引的几个字段是否经常同时以AND方式出现在Where子句中？单字段查询是否极少甚至没有？如果是，则可以建立复合索引；否则考虑单字段索引； C、如果复合索引中包含的字段经常单独出现在Where子句中，则分解为多个单字段索引； D、如果复合索引所包含的字段超过3个，那么仔细考虑其必要性，考虑减少复合的字段； E、如果既有单字段索引，又有这几个字段上的复合索引，一般可以删除复合索引；
8、频繁进行数据操作的表，不要建立太多的索引；
9、删除无用的索引，避免对执行计划造成负面影响； 以上是一些普遍的建立索引时的判断依据。一言以蔽之，索引的建立必须慎重，对每个索引的必要性都应该经过仔细分析，要有建立的依据。因为太多的索引与不充分、不正确的索引对性能都毫无益处：在表上建立的每个索引都会增加存储开销，索引对于插入、删除、更新操作也会增加处理上的开销。另外，过多的复合索引，在有单字段索引的情况下，一般都是没有存在价值的；相反，还会降低数据增加删除时的性能，特别是对频繁更新的表来说，负面影响更大


mysql查看索引命令：
show index from topic_topic;

Django==1.8
MySQL-python==1.2.5
Pillow==3.0.0
amqp==1.4.9
anyjson==0.3.3
######################################33
argparse==1.2.1
billiard==3.3.0.23
celery==3.1.23
celery-with-redis==3.0
distribute==0.6.24
django-celery==3.1.17
django-ckeditor==5.0.3
django-redis==4.4.1
django-simple-captcha==0.5.1
kombu==3.0.35
pytz==2016.4
redis==2.10.5
six==1.10.0
wsgiref==0.1.2

easy_install supervisor

域名备案 购买服务器


uwsgi --http :8000 --module mynewspaper.wsgi --enable-threads
发布部署：
$sudo apt-get install nginx-full
pip install uwsgi
python manage.py collectstatic
sudo /etc/init.d/nginx start
cat /etc/nginx/uwsgi_params

sudo ln -s /home/shen/Documents/paperproject/mynewspaper/mysite_nginx.conf /etc/nginx/sites-enabled/

uwsgi --socket mynewspaper.sock --module mynewspaper.wsgi --chmod-socket=666

uwsgi --ini mynewspaper.ini

http://127.0.0.1:8000/static/media/images/173926909192.jpg

学习 Fabric  目的：部署

每次上传新的图片后，都需要执行python manage.py collectstatic， nginx才能找到新的static文件

富文本框上传部署问题

topic上传图片后，需要运行python manage.py collectstatic命令

现代科技
 

:%s/T val = ExprEval ( this->m_pArg, tMatch );/T val = this->ExprEval ( this->m_pArg, tMatch );/g
coreseek已安装完成，待验证
配置ngnix和django

mysqldump -u root -p -d newspaper > createtab.sql  ##复制数据库表结构

source /home/shen/Downloads/somefile/createtab.sql


将部署好的工程上传到mynewspaper

[program:redis-server]
command=./home/shen/Downloads/redis-3.0.7/srcredis-server

[program:celery]
command={{ PYTHON }} manage.py celery worker --loglevel=info  -Q celery

[program:uwsgi]
command={{ PYTHON }} manage.py runserver 8080




智能家居
智能穿戴
机器人
市场新闻

瞎聊
科技时事
金融投资
创业交流
体育
我要

sudo sh /home/deploy.sh


sudo ln -s /home/shen/Documents/paperproject/mynewspaper/mynewspaper.ini /etc/uwsgi/vassals/
sudo uwsgi --emperor /etc/uwsgi/vassals --uid www-data --gid www-data

[program:redis-server]
command=redis-server

[program:celery]
command={{ PYTHON }} manage.py celery worker --loglevel=info  -Q celery



[program:uwsgi]
command=uwsgi --ini mynewspaper.ini


原创
我们
梧桐观点
联系我们
小兵
违者将承担法律责任！

